name: daily-analytics
on:
  schedule:
    - cron: "35 21 * * 1-5"    # â‰ˆ 17:35 Toronto during EDT
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: daily-analytics
  cancel-in-progress: true

jobs:
  pull-daily:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install jq and load endpoints
        id: ep
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq
          test -f config/endpoints.json || { echo "Missing config/endpoints.json"; exit 1; }
          echo "ta=$(jq -r '.daily.TA    | to_entries[] | [.key,.value] | @tsv' config/endpoints.json)" >> $GITHUB_OUTPUT
          echo "h=$(jq -r  '.daily.H     | to_entries[] | [.key,.value] | @tsv' config/endpoints.json)" >> $GITHUB_OUTPUT
          echo "other=$(jq -r '.daily.other | to_entries[] | [.key,.value] | @tsv' config/endpoints.json)" >> $GITHUB_OUTPUT

      - name: Fetch and commit (commit-on-diff with normalization)
        run: |
          set -euo pipefail
          TS_UTC=$(date -u +%Y-%m-%dT%H%MZ)
          DATE_UTC=$(date -u +%F)

          fetch() {
            NAME="$1"; URL="$2"
            TMP="/tmp/$NAME.csv"
            curl -fsSL --retry 5 --retry-delay 2 --max-time 120 "$URL" -o "$TMP"
            sed -i 's/\r$//' "$TMP"
            awk '{sub(/[ \t]+$/, ""); print}' "$TMP" > "/tmp/${NAME}.norm.csv" && mv "/tmp/${NAME}.norm.csv" "$TMP"
            [ -s "$TMP" ] || { echo "Empty CSV for $NAME; skipping."; return 0; }

            LATEST="daily/${NAME}-latest.csv"
            SNAP="daily/${DATE_UTC}/${NAME}-${TS_UTC}.csv"
            mkdir -p "daily/${DATE_UTC}"

            if ! test -f "$LATEST" || ! cmp -s "$TMP" "$LATEST"; then
              cp "$TMP" "$LATEST"
              cp "$TMP" "$SNAP"
              git add "$LATEST" "$SNAP"
              echo "Updated $NAME"
            else
              echo "No change for $NAME"
            fi
          }

          while IFS=$'\t' read -r NAME URL; do [ -z "$NAME" ] && continue; fetch "$NAME" "$URL"; done <<< "${{ steps.ep.outputs.ta }}"
          while IFS=$'\t' read -r NAME URL; do [ -z "$NAME" ] && continue; fetch "$NAME" "$URL"; done <<< "${{ steps.ep.outputs.h }}"
          while IFS=$'\t' read -r NAME URL; do [ -z "$NAME" ] && continue; fetch "$NAME" "$URL"; done <<< "${{ steps.ep.outputs.other }}"

          if git diff --cached --quiet; then
            echo "No updates to commit."
          else
            git config user.name  "github-actions"
            git config user.email "actions@github.com"
            git commit -m "daily: refresh $TS_UTC"
            git push
          fi
