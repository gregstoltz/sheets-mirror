name: secret-wiring-4d
on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify secrets and fetch CSV headers (strip wrappers)
        env:
          SCAN_URL:         ${{ secrets.SCAN_URL }}
          PRICES_URL:       ${{ secrets.PRICES_URL }}
          GLOBAL_CHECK_URL: ${{ secrets.GLOBAL_CHECK_URL }}
          HEALTH_URL:       ${{ secrets.HEALTH_URL }}
          GF_URL:           ${{ secrets.GF_URL }}
        shell: bash
        run: |
          set -euo pipefail

          strip_wrap() {
            # remove CR/LF, trim, and drop surrounding ", ', `, <, >
            s="$(printf '%s' "$1" | tr -d '\r\n')"
            # trim
            s="$(printf '%s' "$s" | sed -e 's/^[[:space:]]\+//' -e 's/[[:space:]]\+$//')"
            # strip a single pair of wrappers if present
            case "$s" in
              \"*\" ) s="${s#\"}"; s="${s%\"}";;
              \'*\' ) s="${s#\'}"; s="${s%\'}";;
              \`*\` ) s="${s#\`}"; s="${s%\`}";;
              \<*\> ) s="${s#<}";  s="${s%>}";;
            esac
            printf '%s' "$s"
          }

          show_safe() {
            # print only scheme + host (redacted), no query/path leakage
            u="$1"
            proto="$(printf '%s' "$u" | sed -n 's#^\([^:]\+\)://.*#\1#p')"
            host="$(printf '%s' "$u" | sed -n 's#^[^:]\+://\([^/]\+\).*#\1#p')"
            echo "${proto:-?}://${host:-?}/…"
          }

          test_csv () {
            local NAME="$1"; local RAW="$2"
            if [ -z "${RAW:-}" ]; then
              echo "::error ::$NAME secret is empty"; exit 1
            fi
            local URL; URL="$(strip_wrap "$RAW")"

            # basic sanity
            if ! printf '%s' "$URL" | grep -qi '^https://'; then
              echo "::error ::$NAME does not start with https:// → $(show_safe "$URL")"
              exit 1
            fi

            echo "---- $NAME ---- $(show_safe "$URL")"
            # follow redirects; disable globbing to avoid [] expansion issues
            status=$(curl -sI -L --globoff "$URL" | sed -n '1p' || true)
            echo "HTTP $status"

            head=$(curl -fsSL -L --globoff --retry 3 --retry-delay 2 --max-time 60 "$URL" | head -1 || true)
            if [ -z "$head" ]; then
              echo "::error ::$NAME returned empty body"; exit 1
            fi
            echo "Header: $head"
            echo
          }

          for k in SCAN_URL PRICES_URL GLOBAL_CHECK_URL HEALTH_URL GF_URL; do
            v="${!k:-}"
            # show length and safe preview
            sv="$(strip_wrap "$v")"
            echo "::notice ::$k length $(printf '%s' "$sv" | wc -c), $(show_safe "$sv")"
          done

          test_csv "SCAN"         "$SCAN_URL"
          test_csv "Prices"       "$PRICES_URL"
          test_csv "GLOBAL_CHECK" "$GLOBAL_CHECK_URL"
          test_csv "HEALTH"       "$HEALTH_URL"
          test_csv "__GF_FETCH__" "$GF_URL"

      - name: Commit sentinel (proves write permission)
        shell: bash
        run: |
          date -u +"%Y-%m-%dT%H:%MZ" > SECRET_WIRING_4D_OK
          git add SECRET_WIRING_4D_OK
          git -c user.name=github-actions -c user.email=actions@github.com commit -m "4D: secrets verified"
          git push || echo "Push blocked (branch protection?). OK if protected."
